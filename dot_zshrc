# ==========================
# PATH and Environment Setup
# ==========================
export PATH=/opt/homebrew/bin:/opt/homebrew/opt:${HOME}/.local/bin:$PATH
fpath+=("$(brew --prefix)/share/zsh/site-functions")
FPATH=~/.zfunc:$FPATH

# Set color schemes for various tools
export LS_COLORS="$(vivid generate catppuccin-mocha)"
export EZA_COLORS="$(vivid generate catppuccin-mocha)"
export VIRTUAL_ENV_DISABLE_PROMPT=true

# ==========================
# FZF
# ==========================
# Catppuccin theme
FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--color=selected-bg:#45475a \
--multi"

export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# ==========================
# Prompt Initialization
# ==========================
# Init Starship - prompt
eval "$(starship init zsh)"

# ==========================
# Plugin Initialization
# ==========================
source "${HOME}/.iterm2_shell_integration.zsh"

# Initialize Zsh completion
autoload -Uz compinit
compinit -u

# Check if Homebrew is installed
if type brew &>/dev/null; then
  # Add Homebrew completions to FPATH
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
  
  # Source Zsh plugins
  source ~/.zsh_plugins/fzf-tab/fzf-tab.plugin.zsh
  # source "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
  source "$(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
  source "$(brew --prefix)/opt/zsh-vi-mode/share/zsh-vi-mode/zsh-vi-mode.plugin.zsh"
  source <(fzf --zsh)
  
fi

# ---- Carapace -----
export CARAPACE_BRIDGES='zsh,fish,bash,inshellisense'
zstyle ':completion:*' format $'\e[2;37mCompleting %d\e[m'
source <(carapace _carapace)

# ---- Completion settings -----
# Set up case-insensitive matching for completion.
# This allows the completion system to match lowercase and uppercase letters interchangeably.
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
# Set the colors used in the completion list to match the LS_COLORS environment variable.
# This ensures that the colors used in the completion output are consistent with those used in the terminal.
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
# Disable the menu selection for completion.
# This means that when you press Tab, it will not show a menu of completions; instead, it will directly complete the command.
zstyle ':completion:*' menu no
# To make fzf-tab follow FZF_DEFAULT_OPTS.
# NOTE: This may lead to unexpected behavior since some flags break this plugin. See Aloxaf/fzf-tab#455.
zstyle ':fzf-tab:*' use-fzf-default-opts yes

# ---- Zoxide -----
eval "$(zoxide init --cmd cd zsh)"

# ---- TheFuck -----
# thefuck alias
eval $(thefuck --alias)
eval $(thefuck --alias fck)

# ==========================
# Atuin Initialization
# ==========================
zvm_after_init_commands+=(eval "$(atuin init zsh --disable-up-arrow)")

# ==========================
# Aliases
# ==========================
alias cdf="cdi"

alias codef="cdi && code ."  # Find directories and edit with VSCode
alias codeff="fzf --preview 'bat --color=always {}' | xargs code"  # Find files and edit with VSCode
alias cf="codef"
alias cff="codeff"

alias vim="nvim"  # Use nvim as vim
alias vi="nvim"  # Use nvim as vi
alias vif="cdi && nvim ."  # Find directories and edit with Neovim
alias viff="fzf --preview 'bat --color=always {}' | xargs nvim"  # Find files and edit with Neovim

alias venva="source .venv/bin/activate" # activate venvs
alias ls="eza --long --group-directories-first --icons"  # Use eza for ls
alias mr="mise run --"  # Alias for mise run
alias ".."="cd .."  # Go up one directory
alias "..."="cd ../.."  # Go up two directories
alias "...."="cd ../../.."  # Go up three directories
alias work="cd ~/Workspace"  # Go to Workspace directory
alias cm="chezmoi"  # Alias for chezmoi
alias cat="bat"  # Use bat instead of cat
alias reload="cm apply && source ~/.zshrc"

# ==========================
# Environment Variables
# ==========================
export AWS_REGION="eu-west-1"  # Set AWS region
export AWS_DEFAULT_REGION="eu-west-1"  # Set default AWS region
export AWS_PROFILE="oddin"  # Set AWS profile
export EDITOR="code --wait"  # Set default editor to VS Code

# ==========================
# Mise Initialization
# ==========================
eval "$($(brew --prefix)/bin/mise activate zsh)"

# ==========================
# Custom Functions
# ==========================
# yazi settings to enable exit and stay in changed directory
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"  # Run yazi with cwd file
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"  # Change directory if cwd is different
	fi
	rm -f -- "$tmp"  # Clean up temporary file
}

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \${}'"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}